# -*- coding: utf-8 -*-
"""
Created on Fri Sep 15 14:04:30 2023

@author: SemanurSancar
"""

import pandas as pd
from typing import Tuple

def cluster_base_max_generation_rate_table_import() -> Tuple[pd.DataFrame]:
    """
    Objective:
    Import the given dataset and perform data preparation by filling empty coordinates with default values.
    The ratios were obtained by analyzing the solar generation values in the JRC database and the FOTON database.
    In later versions, this dataset can be pulled from the database.

    Returns:
    month_base_range_base_max_rate_w_all_coor (DataFrame): DataFrame containing solar energy generation max ratios data with filled empty coordinates.
    """

  
    month_base_cluster_base_max_rate_dict = {
    'kmeans_labels': list(range(20)),
    1: [1.058208, 1.259674, 1.000000, 1.170433, 1.000000, 1.060603, 1.000000, 1.176345, 1.000000, 1.233392, 1.221531, 1.376454, 1.000000, 1.182235, 1.000000, 1.199475, 1.000000, 1.140304, 1.000000, 1.000000],
    2: [1.042306, 1.252691, 1.000000, 1.205014, 1.000000, 1.305357, 1.209722, 1.222005, 1.000000, 1.247035, 1.302660, 1.154421, 1.127965, 1.431518, 1.000000, 1.171900, 1.120918, 1.000000, 1.370682, 1.000000],
    3: [1.000000, 1.035949, 1.000000, 1.000000, 1.000000, 1.266278, 1.000000, 1.080735, 1.000000, 1.079474, 1.013467, 1.000000, 1.013169, 1.000000, 1.000000, 1.048652, 1.002607, 1.000000, 1.047206, 1.000000],
    4: [1.331273, 1.202601, 1.000000, 1.105902, 1.000000, 1.176612, 1.154106, 1.156988, 1.000000, 1.219079, 1.073681, 1.032465, 1.000000, 1.090913, 1.000000, 1.134813, 1.045013, 1.150842, 1.000000, 1.000000],
    5: [1.418033, 1.488698, 1.000000, 1.158409, 1.091130, 1.324920, 1.278309, 1.238986, 1.154014, 1.328844, 1.221631, 1.258911, 1.201223, 1.265738, 1.000000, 1.326301, 1.298537, 1.490271, 1.000000, 1.000000],
    6: [1.593789, 1.501376, 1.000000, 1.115218, 1.026140, 1.218560, 1.018812, 1.250778, 1.073826, 1.389395, 1.210052, 1.104563, 1.105235, 1.197454, 1.000000, 1.250824, 1.197388, 1.408363, 1.000000, 1.000000],
    7: [1.670899, 1.487208, 1.051391, 1.161606, 1.000000, 1.199812, 1.164213, 3.967817, 1.123257, 1.396911, 1.265635, 1.194670, 1.176207, 1.138426, 1.000000, 1.237870, 1.341612, 1.439972, 1.000000, 1.000000],
    8: [1.543405, 1.318255, 1.000000, 1.164510, 1.002446, 1.178108, 1.087243, 1.179569, 1.133840, 1.600567, 1.172558, 1.089827, 1.133607, 1.107845, 1.200959, 1.081362, 1.220569, 1.406989, 1.160031, 1.000000],
    9: [1.337649, 1.132222, 1.000000, 1.044251, 1.000445, 1.083047, 1.000000, 1.131047, 1.018865, 1.432234, 1.124960, 1.081449, 1.106426, 1.000000, 1.161034, 1.125216, 1.141915, 1.125391, 1.000000, 1.000000],
    10: [1.116176, 1.095219, 1.000000, 1.085827, 1.046144, 1.206507, 1.046144, 1.134546, 1.048517, 1.536368, 1.135906, 1.139001, 1.103934, 1.123044, 1.153331, 1.053833, 1.155499, 1.404236, 1.000000, 1.000000],
    11: [1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.033311, 1.000000, 1.000000, 1.049930, 1.076953, 1.000000, 1.138958, 1.000000, 1.078129, 1.000000, 1.000000, 1.000000],
    12: [1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.004117, 1.204503, 1.000000, 1.000000, 1.191497, 1.005279, 1.000000, 1.000000, 1.000000, 1.170884, 1.048207, 1.000000, 1.000000, 1.000000, 1.000000]
    }
    
    month_base_cluster_base_max_rate = pd.DataFrame(month_base_cluster_base_max_rate_dict)


    return month_base_cluster_base_max_rate